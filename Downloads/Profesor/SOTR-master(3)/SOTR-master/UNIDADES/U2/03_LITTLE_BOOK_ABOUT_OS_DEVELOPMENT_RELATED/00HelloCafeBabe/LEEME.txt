Este ejemplo esta tomado del libro 
Little Book OS Development
Para construir el kernel se debe hacer lo siguiente:

1) Ensamblar el archivo loader.s con el comando
nasm -f elf32 loader.s

2) Enlazar o "linkear" el kernel con el comando
ld -T link.ld -melf_i386 loader.o -o kernel.elf

3) Despues para crear la imagen iso se ejecutan los comandos
mkdir -p iso/boot/grub
cp stage2_eltorito iso/boot/grub/
cp kernel.elf iso/boot/

4) Crear el archivo menu.lst 
El contenido del archivo menu.lst deb ser:
default=0
timeout=15

title os
kernel /boot/kernel.elf

5) Copiar el archivo menu.lst al directorio 
iso/boot/grub/ con el comando:
cp menu.lst iso/boot/grub/

6) Despues, se crea la imagen iso con el comando
genisoimage -R                          \
            -b boot/grub/stage2_eltorito\
            -no-emul-boot               \
            -boot-load-size 4           \
            -A os                       \
            -input-charset utf8         \
            -quiet                      \
            -boot-info-table            \
            -o os.iso                   \
            iso/

7) Por ultimo se usa el emulador bochs para probar que si se 
carga el kernel y cuando se cierra bochs se debe revisar el 
archivo bochslog.txt

bochs -f bochsrc.txt -q

NOTA: Una vez que se abre la ventana del emulador bochs, en el prompt 
de bochs
<BOCHS>

debemos teclear c y pulsar la tecla enter.

Despues, apagar emulador dando clic sobre el boton de encendido/apagado.
 

8) Despues de cerrar bochs ejecutar
cat bochslog.txt

y buscar cerca del final del archivo el valor del registro RAX o EAX 
y si todo se hizo bien debera ser CAFEBABE o 0xcafebabe.
